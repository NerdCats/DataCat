{"version":3,"sources":["app/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAkD;AAClD,0CAAyC;AAEzC,uCAA4C;AAC5C,yCAA2D;AAO3D,IAAa,cAAc;IAMvB;;OAEG;IACH,wBACY,MAAc,EACd,WAAwB,EACxB,aAA4B;QAF5B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAXxC,UAAK,GAAQ,EAAE,CAAC;QAChB,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,iBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAQO,CAAC;IAE5C,iCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC;IAED,8BAAK,GAAL;QAAA,iBAaC;QAZG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC3D,SAAS,CAAC,UAAA,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAChC,CAAC;YACD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,UAAA,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAChC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACX,CAAC;IACL,qBAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCY,cAAc;IAL1B,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,UAAU;QACpB,WAAW,EAAE,YAAY;KAC5B,CAAC;qCAWsB,eAAM;QACD,mBAAW;QACT,qBAAa;GAZ/B,cAAc,CAgC1B;AAhCY,wCAAc","file":"login.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from '../auth/index';\r\nimport { CONSTANTS, LoggerService } from '../shared/index';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'as-login',\r\n    templateUrl: 'login.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    model: any = {};\r\n    loading = false;\r\n    error = '';\r\n    appTitle = CONSTANTS.MAIN.APP.BRAND;\r\n\r\n    /**\r\n     * Login component for TaskCat.Enterprise Dashboard\r\n     */\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private loggerService: LoggerService) {}\r\n\r\n    ngOnInit() {\r\n        this.authService.logout();\r\n    }\r\n\r\n    login() {\r\n        this.loading = true;\r\n        this.authService.login(this.model.username, this.model.password)\r\n            .subscribe(result => {\r\n                if (result === true) {\r\n                    this.router.navigate(['/']);\r\n                }\r\n                this.loading = false;\r\n            }, error => {\r\n                this.loggerService.error(error);\r\n                this.error = error;\r\n                this.loading = false;\r\n            });\r\n    }\r\n}\r\n"]}