{"version":3,"sources":["app/job/job-search.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA2C;AAC3C,+CAAuD;AACvD,yCAAgD;AAEhD,kDAAkD;AAElD,IAAa,gBAAgB;IAGzB,0BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;IACL,CAAC;IAED,4DAA4D;IAC5D,qCAAU,GAAV,UAAW,SAAiB,EAAE,KAAa;QACvC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBACvB,KAAK,EAAE,SAAS;gBAChB,CAAC,EAAE,WAAS,KAAO;aACtB,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC;IACL,CAAC;IAED,kEAAkE;IAClE,sCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YACrB,cAAc,EAAE,QAAQ;YACxB,IAAI,EAAE,sBAAsB;SAC/B,CAAC,CAAC;IACP,CAAC;IAEO,mCAAQ,GAAhB;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,sBAAM,CAAC;YACtB,IAAI,EAAE,uBAAuB;YAC7B,GAAG,EAAE,OAAO;SACf,CAAC,CAAC;IACP,CAAC;IACL,uBAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,gBAAgB;IAD5B,iBAAU,EAAE;qCAI0B,qBAAa;GAHvC,gBAAgB,CAoC5B;AApCY,4CAAgB","file":"job-search.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Client, SearchResponse } from 'elasticsearch';\r\nimport { LoggerService } from '../shared/index';\r\n\r\n/** Job search service powered by elasticsearch */\r\n@Injectable()\r\nexport class JobSearchService {\r\n    private _client: Client;\r\n\r\n    constructor(private loggerService: LoggerService) {\r\n        if (!this._client) {\r\n            this._connect();\r\n        }\r\n    }\r\n\r\n    /** Execute a full text search over a elasticsearch index */\r\n    textSearch(indexName: string, query: string): PromiseLike<SearchResponse<{}>> {\r\n        if (query) {\r\n            this.loggerService.log(query);\r\n            return this._client.search({\r\n                index: indexName,\r\n                q: `title:${query}`\r\n            });\r\n        } else {\r\n            Promise.resolve({});\r\n        }\r\n    }\r\n\r\n    /** Check whether the elasticsearch serever is available or not */\r\n    isAvailable(): any {\r\n        return this._client.ping({\r\n            requestTimeout: Infinity,\r\n            body: 'hello elasticsearch!'\r\n        });\r\n    }\r\n\r\n    private _connect() {\r\n        this._client = new Client({\r\n            host: 'http://localhost:9200',\r\n            log: 'trace'\r\n        });\r\n    }\r\n}\r\n"]}