{"version":3,"sources":["app/auth/auth.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA2C;AAC3C,0CAAsD;AACtD,mDAAiD;AAGjD,IAAa,SAAS;IAUlB;;OAEG;IACH,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAVvC,sBAAW,iCAAU;aAArB;YACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aACD,UAAsB,CAAS;YAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACzB,CAAC;;;OAHA;IAUD,+BAAW,GAAX;QACI,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,8BAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC;IACxD,CAAC;IACL,gBAAC;AAAD,CArBA,AAqBC,IAAA;AArBY,SAAS;IADrB,iBAAU,EAAE;qCAcmB,eAAM;GAbzB,SAAS,CAqBrB;AArBY,8BAAS","file":"auth.guard.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthConstants } from './auth.constants';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    private _loginRoute: string;\r\n    public get loginRoute(): string {\r\n        return this._loginRoute;\r\n    }\r\n    public set loginRoute(v: string) {\r\n        this._loginRoute = v;\r\n    }\r\n\r\n    /**\r\n     * AuthGuard should block components from loading if authentication denies so\r\n     */\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate() {\r\n        if (localStorage.getItem(AuthConstants.AUTH_TOKEN_KEY)) {\r\n            return true;\r\n        }\r\n        this.router.navigate([this.loginRoute || '/login']);\r\n    }\r\n}\r\n"]}