{"version":3,"sources":["app/shared/local-storage.provider.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAyC;AAGzC,IAAa,YAAY;IAGrB;QACI,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;QACtE,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;IAEM,0BAAG,GAAV,UAAW,GAAW,EAAE,KAAa;QACjC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACnC,CAAC;IAEM,0BAAG,GAAV,UAAW,GAAW;QAClB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC;IAC3C,CAAC;IAEM,gCAAS,GAAhB,UAAiB,GAAW,EAAE,KAAU;QACpC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEM,gCAAS,GAAhB,UAAiB,GAAW;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,6BAAM,GAAb,UAAc,GAAW;QACrB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IACL,mBAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCY,YAAY;IADxB,iBAAU,EAAE;;GACA,YAAY,CAgCxB;AAhCY,oCAAY;AAkCZ,QAAA,uBAAuB,GAAU;IAC1C,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE;CACpD,CAAC","file":"local-storage.provider.js","sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalStorage {\r\n    public localStorage: any;\r\n\r\n    constructor() {\r\n        if (!localStorage) {\r\n            throw new Error('Current browser does not support Local Storage');\r\n        }\r\n        this.localStorage = localStorage;\r\n    }\r\n\r\n    public set(key: string, value: string): void {\r\n        this.localStorage[key] = value;\r\n    }\r\n\r\n    public get(key: string): string {\r\n        return this.localStorage[key] || false;\r\n    }\r\n\r\n    public setObject(key: string, value: any): void {\r\n        this.localStorage[key] = JSON.stringify(value);\r\n    }\r\n\r\n    public getObject(key: string): any {\r\n        if (this.localStorage[key]) {\r\n            return JSON.parse(this.localStorage[key]);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public remove(key: string): any {\r\n        this.localStorage.removeItem(key);\r\n    }\r\n}\r\n\r\nexport const LOCAL_STORAGE_PROVIDERS: any[] = [\r\n    { provide: LocalStorage, useClass: LocalStorage }\r\n];\r\n"]}