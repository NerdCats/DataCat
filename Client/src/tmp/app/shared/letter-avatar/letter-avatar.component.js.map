{"version":3,"sources":["app/shared/letter-avatar/letter-avatar.component.ts"],"names":[],"mappings":"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","file":"letter-avatar.component.js","sourcesContent":["// taken from https://github.com/rajan-g/angular2-letter-avatar/blob/master/directives/letter-avatar.directive.ts\r\nimport { Component, ElementRef, Input, OnInit, ChangeDetectionStrategy, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'avatar',\r\n    templateUrl: 'letter-avatar.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LetterAvatarComponent implements OnInit, OnChanges {\r\n    @Input('avatardata') avatarData: any;\r\n    letterSrc: string;\r\n    background: string = 'red';\r\n    fontSize: number = 49;\r\n    padding: number = 28;\r\n    letter: string = '?';\r\n    size: number = 100;\r\n    fontColor: string = '#FFFFFF';\r\n    border: string;\r\n    props: any = null;\r\n    private _el: HTMLElement;\r\n\r\n    constructor(el: ElementRef) {\r\n        this._el = el.nativeElement;\r\n    }\r\n    test() {\r\n        this.generateLetter();\r\n    }\r\n\r\n    generateLetter() {\r\n        if (!this.avatarData) {\r\n            throw Error('LetterAvatarComponent config not provided');\r\n        }\r\n        if (!this.avatarData.text) {\r\n            this.avatarData.text = '?';\r\n        }\r\n        let size = this.avatarData && this.avatarData.size ? this.avatarData.size : 100;\r\n        this.fontColor = this.avatarData.fontColor ? this.avatarData.fontColor : '#FFFFFF';\r\n        let isSquare = this.avatarData && this.avatarData.isSquare ? true : false;\r\n        let border = this.avatarData && this.avatarData.border ? this.avatarData.border : '1px solid #d3d3d3';\r\n        let background = this.avatarData && this.avatarData.background ? this.avatarData.background : null;\r\n        let text = this.avatarData && this.avatarData.text ? this.avatarData.text : null;\r\n        this.background = background;\r\n        let textArray = text.split(' ');\r\n        let letter = textArray[0].substr(0, 1) + '' + (textArray.length > 1 ? textArray[1].substr(0, 1) : '');\r\n        letter = letter.toUpperCase();\r\n        this.fontSize = (39 * size) / 100;\r\n        this.padding = (28 * size) / 100;\r\n        this.letter = letter;\r\n        this.size = size;\r\n        this.props = {};\r\n        this.props.size = size + 'px';\r\n        this.props.lineheight = this.size + 'px';\r\n        this.props.letter = letter;\r\n        this.props.fontSize = this.fontSize + 'px';\r\n        if (isSquare) {\r\n            this.props.borderradius = '0%';\r\n        } else {\r\n            this.props.borderradius = '50%';\r\n        }\r\n        this.props.textalign = 'center';\r\n        this.props.border = border;\r\n        this.props.background = background;\r\n        if (this.avatarData.fixedColor && !background) {\r\n            this.props.background = background || this.colorize(letter);\r\n        } else {\r\n            this.props.background = background || this.getRandomColor();\r\n        }\r\n        return true;\r\n    };\r\n\r\n    getRandomColor() {\r\n        let letters = '0123456789ABCDEF'.split('');\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n    colorize(str) {\r\n        let hash = 0;\r\n        for (let i = 0; i < str.length; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            hash = str.charCodeAt(i++) + ((hash << 5) - hash);\r\n        };\r\n        let color = Math.floor(Math.abs((Math.sin(hash) * 10000) % 1 * 16777216)).toString(16);\r\n        return '#' + Array(6 - color.length + 1).join('0') + color;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.generateLetter();\r\n    }\r\n    ngOnChanges(...args: any[]) {\r\n        this.generateLetter();\r\n    }\r\n}\r\n"]}