{"version":3,"sources":["app/app.routing.ts"],"names":[],"mappings":";AAAA,0CAAuD;AAEvD,sCAA0C;AAC1C,uCAA2C;AAE3C,gDAA8C;AAE9C,IAAM,aAAa,GACZ,kBAAU,QAChB,CAAC;AAEF,GAAG,CAAC,CAAc,UAAa,EAAb,+BAAa,EAAb,2BAAa,EAAb,IAAa;IAA1B,IAAI,KAAK,sBAAA;IACV,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACR,KAAK,CAAC,WAAW,GAAG,CAAC,sBAAS,CAAC,CAAC;IACpC,CAAC;CACJ;AAED,IAAM,YAAY,GAAW;IACzB,kBAAU;CACb,CAAC;AAEF,IAAM,SAAS,GACR,YAAY,QACZ,aAAa,CACnB,CAAC;AAEW,QAAA,mBAAmB,GAAU,EAEzC,CAAC;AAEW,QAAA,OAAO,GAAG,qBAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC","file":"app.routing.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeRoutes } from './home/index';\r\nimport { LoginRoute } from './login/index';\r\n\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nconst securedRoutes: Routes = [\r\n    ...HomeRoutes,\r\n];\r\n\r\nfor (let route of securedRoutes) {\r\n    if (route) {\r\n        route.canActivate = [AuthGuard];\r\n    }\r\n}\r\n\r\nconst publicRoutes: Routes = [\r\n    LoginRoute\r\n];\r\n\r\nconst appRoutes: Routes = [\r\n    ...publicRoutes,\r\n    ...securedRoutes\r\n];\r\n\r\nexport const appRoutingProviders: any[] = [\r\n\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n"]}